version: '3.8'

networks:
  consul-net:
    driver: bridge

volumes:
  vault_data:

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    restart: "no"
    depends_on:
      - consul
    ports:
      - "2181:2181"
    networks:
      - consul-net

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    restart: "no"
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    depends_on:
      - consul
      - zookeeper
    networks:
      - consul-net

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    depends_on:
      - consul
      - "kafka"
    networks:
      - consul-net

  gateway:
    container_name: gateway
    build: ./gateway
    ports:
      - '8080:8080'
    depends_on:
      - consul
    networks:
      - consul-net

  email-service:
    container_name: email-service
    volumes:
      - ./logs:/app/logs
    build: email-service
    depends_on:
      - kafka
      - consul
      - vault
    ports:
      - 45292:45292
    networks:
      - consul-net

  security-service:
    container_name: security-service
    env_file: ./security-service/src/main/resources/application.env
    build: ./security-service
    ports:
      - '8765:8765'
    depends_on:
      - consul
      - usersDB
    networks:
      - consul-net

  usersDB:
    image: postgres:alpine
    container_name: usersDB
    hostname: usersDB
    ports:
      - '5430:5430'
    environment:
      POSTGRES_DB: usersDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - ./usersDB:/data
    networks:
      - consul-net

  profile-service:
    container_name: profile-service
    build: profile-service
    env_file: ./profile-service/src/main/resources/application.env
    depends_on:
      - profileDb
      - consul
    ports:
      - 45291:45291
    networks:
      - consul-net

  profileDb:
    image: postgres:alpine
    restart: unless-stopped
    hostname: profileDb
    container_name: profileDb
    ports:
      - 5431:5431
    environment:
      POSTGRES_DB: profileDb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - ./profileDb:/data
    networks:
      - consul-net

  file-storage-service:
    container_name: file-storage-service
    build: file-storage-service
    depends_on:
      - fileStorageDb
      - consul
      - vault
    ports:
      - 45295:45295
    networks:
      - consul-net
    volumes:
      - "${PATH_TO_FILE_STORAGE}/docker-storage/files:/files"

  fileStorageDb:
    image: postgres:alpine
    restart: unless-stopped
    hostname: fileStorageDb
    container_name: fileStorageDb
    ports:
      - 5439:5439
    environment:
      POSTGRES_DB: fileStorageDb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - ./fileStorageDb:/data
    networks:
      - consul-net

  vault:
    image: hashicorp/vault:1.15.2
    container_name: vault
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "root"
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
      VAULT_ADDR: "http://vault:8200"
    ports:
      - "8200:8200"
    volumes:
      - vault_data:/vault/file
    cap_add:
      - IPC_LOCK
    restart: unless-stopped
    networks:
      - consul-net

  consul:
    container_name: consul
    image: consul:1.1.0
    hostname: consul
    ports:
      - 8500:8500
    networks:
      - consul-net